# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ NS-3 —Å–∏–º—É–ª—è—Ü–∏–∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
# –ê–≤—Ç–æ—Ä: Senior Developer
# –î–∞—Ç–∞: 2024-12-19

param(
    [string]$ConfigFile = "config/ns3.conf",
    [string]$ModelFile = "models/ns3/industrial_network.py",
    [int]$SimulationTime = 100,
    [string]$OutputDir = "results/ns3",
    [switch]$Verbose,
    [switch]$Help
)

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
function Show-Help {
    Write-Host @"
NS-3 Industrial Network Simulator

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    .\run_ns3.ps1 [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    -ConfigFile <–ø—É—Ç—å>     –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: config/ns3.conf)
    -ModelFile <–ø—É—Ç—å>      –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ —Å–µ—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: models/ns3/industrial_network.py)
    -SimulationTime <—Å–µ–∫>  –í—Ä–µ–º—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100)
    -OutputDir <–ø—É—Ç—å>      –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: results/ns3)
    -Verbose               –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    -Help                  –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    .\run_ns3.ps1
    .\run_ns3.ps1 -SimulationTime 200 -Verbose
    .\run_ns3.ps1 -ConfigFile "custom_config.conf" -OutputDir "custom_results"

"@
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å–ø—Ä–∞–≤–∫–∏
if ($Help) {
    Show-Help
    exit 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è NS-3
function Test-NS3Installation {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ NS-3..." -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è NS3_ROOT
    if ($env:NS3_ROOT) {
        Write-Host "‚úÖ NS3_ROOT –Ω–∞–π–¥–µ–Ω: $env:NS3_ROOT" -ForegroundColor Green
        return $true
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    $ns3Paths = @(
        "C:\ns-3.40",
        "C:\ns-3.39",
        "C:\ns-3.38",
        "$env:USERPROFILE\ns-3.40",
        "$env:USERPROFILE\ns-3.39"
    )
    
    foreach ($path in $ns3Paths) {
        if (Test-Path $path) {
            Write-Host "‚úÖ NS-3 –Ω–∞–π–¥–µ–Ω –≤: $path" -ForegroundColor Green
            $env:NS3_ROOT = $path
            return $true
        }
    }
    
    Write-Host "‚ùå NS-3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ NS-3 –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é NS3_ROOT" -ForegroundColor Red
    return $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-NS3Dependencies {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π NS-3..." -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    try {
        $pythonVersion = python --version 2>&1
        Write-Host "‚úÖ Python –Ω–∞–π–¥–µ–Ω: $pythonVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
    try {
        $pipVersion = pip --version 2>&1
        Write-Host "‚úÖ pip –Ω–∞–π–¥–µ–Ω: $pipVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip" -ForegroundColor Red
        return $false
    }
    
    return $true
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
function Install-PythonDependencies {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..." -ForegroundColor Yellow
    
    $dependencies = @(
        "numpy",
        "matplotlib",
        "scipy",
        "pandas"
    )
    
    foreach ($dep in $dependencies) {
        try {
            Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $dep..." -ForegroundColor Cyan
            pip install $dep --quiet
            Write-Host "‚úÖ $dep —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $dep" -ForegroundColor Yellow
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
function Test-ConfigFile {
    param([string]$ConfigPath)
    
    if (-not (Test-Path $ConfigPath)) {
        Write-Host "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $ConfigPath" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: $ConfigPath" -ForegroundColor Green
    return $true
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏
function Test-ModelFile {
    param([string]$ModelPath)
    
    if (-not (Test-Path $ModelPath)) {
        Write-Host "‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $ModelPath" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω: $ModelPath" -ForegroundColor Green
    return $true
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function New-OutputDirectory {
    param([string]$OutputPath)
    
    if (-not (Test-Path $OutputPath)) {
        New-Item -ItemType Directory -Path $OutputPath -Force | Out-Null
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $OutputPath" -ForegroundColor Green
    }
    else {
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $OutputPath" -ForegroundColor Green
    }
}

# –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ NS-3
function Start-NS3Simulation {
    param(
        [string]$ModelPath,
        [string]$OutputPath,
        [int]$SimTime
    )
    
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ NS-3..." -ForegroundColor Green
    Write-Host "–ú–æ–¥–µ–ª—å: $ModelPath" -ForegroundColor Cyan
    Write-Host "–í—Ä–µ–º—è —Å–∏–º—É–ª—è—Ü–∏–∏: $SimTime —Å–µ–∫—É–Ω–¥" -ForegroundColor Cyan
    Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $OutputPath" -ForegroundColor Cyan
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    Push-Location $OutputPath
    
    try {
        # –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
        Write-Host "‚è≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–º—É–ª—è—Ü–∏–∏..." -ForegroundColor Yellow
        
        if ($Verbose) {
            python $ModelPath
        }
        else {
            python $ModelPath 2>&1 | Out-Null
        }
        
        Write-Host "‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        $results = Get-ChildItem -Path "." -Filter "*.xml" | Sort-Object LastWriteTime -Descending
        if ($results) {
            Write-Host "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–∏:" -ForegroundColor Green
            foreach ($result in $results) {
                Write-Host "  - $($result.Name) ($($result.Length) –±–∞–π—Ç)" -ForegroundColor Cyan
            }
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∏–º—É–ª—è—Ü–∏–∏: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
    finally {
        Pop-Location
    }
    
    return $true
}

# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function Analyze-NS3Results {
    param([string]$OutputPath)
    
    Write-Host "üìà –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–º—É–ª—è—Ü–∏–∏..." -ForegroundColor Yellow
    
    $xmlFiles = Get-ChildItem -Path $OutputPath -Filter "*.xml"
    
    if (-not $xmlFiles) {
        Write-Host "‚ö†Ô∏è –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Yellow
        return
    }
    
    foreach ($xmlFile in $xmlFiles) {
        Write-Host "üìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: $($xmlFile.Name)" -ForegroundColor Cyan
        
        try {
            # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ XML —Ñ–∞–π–ª–∞
            $xml = [xml](Get-Content $xmlFile.FullName)
            
            # –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Ç–æ–∫–æ–≤
            $flows = $xml.SelectNodes("//Flow")
            if ($flows) {
                Write-Host "  –ü–æ—Ç–æ–∫–æ–≤: $($flows.Count)" -ForegroundColor Green
                
                foreach ($flow in $flows[0..2]) { # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–æ—Ç–æ–∫–∞
                    $src = $flow.Source
                    $dst = $flow.Destination
                    $packets = $flow.Packets
                    Write-Host "    $src -> $dst : $packets –ø–∞–∫–µ—Ç–æ–≤" -ForegroundColor White
                }
            }
        }
        catch {
            Write-Host "  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å XML" -ForegroundColor Yellow
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host "üè≠ NS-3 Industrial Network Simulator" -ForegroundColor Magenta
    Write-Host "=====================================" -ForegroundColor Magenta
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ NS-3
    if (-not (Test-NS3Installation)) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ NS-3. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if (-not (Test-NS3Dependencies)) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
    Install-PythonDependencies
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if (-not (Test-ConfigFile $ConfigFile)) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    if (-not (Test-ModelFile $ModelFile)) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    New-OutputDirectory $OutputDir
    
    # –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
    if (Start-NS3Simulation -ModelPath $ModelFile -OutputPath $OutputDir -SimTime $SimulationTime) {
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        Analyze-NS3Results $OutputDir
        
        Write-Host "üéâ –°–∏–º—É–ª—è—Ü–∏—è NS-3 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $OutputDir" -ForegroundColor Cyan
    }
    else {
        Write-Host "‚ùå –°–∏–º—É–ª—è—Ü–∏—è NS-3 –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π." -ForegroundColor Red
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if ($MyInvocation.InvocationName -ne ".") {
    Main
}

