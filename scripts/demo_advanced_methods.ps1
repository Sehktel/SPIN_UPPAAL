#!/usr/bin/env pwsh
# -*- coding: utf-8 -*-
<#
.SYNOPSIS
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    
.DESCRIPTION
    –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ç—Ä–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –º–µ—Ç–æ–¥–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:
    1. IC3/PDR - Property Directed Reachability
    2. Interpolation - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç—Ä–ø—Ä–∏–º–µ—Ä–æ–≤
    3. Abstraction Refinement - –†–∞–±–æ—Ç–∞ —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
    
.PARAMETER Method
    –ú–µ—Ç–æ–¥ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: ic3_pdr, interpolation, abstraction, all
    
.PARAMETER Model
    –ú–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
.EXAMPLE
    .\demo_advanced_methods.ps1 -Method ic3_pdr
    .\demo_advanced_methods.ps1 -Method all -Model "modbus_tcp"
    
.NOTES
    –ê–≤—Ç–æ—Ä: Senior Developer
    –î–∞—Ç–∞: 2024-12-19
    –í–µ—Ä—Å–∏—è: 1.0
#>

param(
    [Parameter(Mandatory=$false)]
    [ValidateSet("ic3_pdr", "interpolation", "abstraction", "all")]
    [string]$Method = "all",
    
    [Parameter(Mandatory=$false)]
    [string]$Model = ""
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Colors = @{
    Header = "Cyan"
    Success = "Green"
    Warning = "Yellow"
    Error = "Red"
    Info = "Blue"
    Method = "Magenta"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Colors[$Color]
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
function Write-Header {
    param([string]$Title)
    Write-ColorOutput "`n" -Color Header
    Write-ColorOutput "=" * 80 -Color Header
    Write-ColorOutput " $Title" -Color Header
    Write-ColorOutput "=" * 80 -Color Header
    Write-ColorOutput ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ç–æ–¥–µ
function Write-MethodInfo {
    param(
        [string]$MethodName,
        [string]$Description,
        [string]$Problem,
        [string]$Solution
    )
    Write-ColorOutput "üîß $MethodName" -Color Method
    Write-ColorOutput "   –û–ø–∏—Å–∞–Ω–∏–µ: $Description" -Color Info
    Write-ColorOutput "   –ü—Ä–æ–±–ª–µ–º–∞: $Problem" -Color Warning
    Write-ColorOutput "   –†–µ—à–µ–Ω–∏–µ: $Solution" -Color Success
    Write-ColorOutput ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ IC3/PDR
function Demo-IC3PDR {
    Write-Header "IC3/PDR - Property Directed Reachability"
    
    Write-MethodInfo `
        "IC3/PDR" `
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º" `
        "K-–∏–Ω–¥—É–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Å–ª–æ–∂–Ω—ã–µ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã" `
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    Write-ColorOutput "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ IC3/PDR:" -Color Info
    $models = Get-ChildItem "models/ic3_pdr" -Filter "*.sal" | ForEach-Object { $_.BaseName }
    
    foreach ($model in $models) {
        Write-ColorOutput "   ‚úÖ $model.sal" -Color Success
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    Write-ColorOutput "`n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è IC3/PDR:" -Color Info
    if (Test-Path "config/ic3_pdr.conf") {
        $config = Get-Content "config/ic3_pdr.conf" | Select-String "enabled|invariant_generation|strengthening_iterations"
        foreach ($line in $config) {
            Write-ColorOutput "   $line" -Color Info
        }
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º
    Write-ColorOutput "`nüéØ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º, —Ä–µ—à–∞–µ–º—ã—Ö IC3/PDR:" -Color Info
    Write-ColorOutput "   ‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã Modbus TCP" -Color Warning
    Write-ColorOutput "   ‚Ä¢ –°–≤–æ–π—Å—Ç–≤–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ EtherCAT" -Color Warning
    Write-ColorOutput "   ‚Ä¢ –ò–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤" -Color Warning
    
    Write-ColorOutput "`n‚úÖ IC3/PDR –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -Color Success
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Interpolation
function Demo-Interpolation {
    Write-Header "Interpolation - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç—Ä–ø—Ä–∏–º–µ—Ä–æ–≤"
    
    Write-MethodInfo `
        "Interpolation" `
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç—Ä–ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤" `
        "–°–ª–æ–∂–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ UPPAAL" `
        "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –∫–æ–Ω—Ç—Ä–ø—Ä–∏–º–µ—Ä–æ–≤"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    Write-ColorOutput "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Interpolation:" -Color Info
    $models = Get-ChildItem "models/interpolation" -Filter "*.sal" | ForEach-Object { $_.BaseName }
    
    foreach ($model in $models) {
        Write-ColorOutput "   ‚úÖ $model.sal" -Color Success
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    Write-ColorOutput "`n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Interpolation:" -Color Info
    if (Test-Path "config/interpolation.conf") {
        $config = Get-Content "config/interpolation.conf" | Select-String "enabled|temporal_interpolation|unsat_core_analysis"
        foreach ($line in $config) {
            Write-ColorOutput "   $line" -Color Info
        }
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º
    Write-ColorOutput "`nüéØ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º, —Ä–µ—à–∞–µ–º—ã—Ö Interpolation:" -Color Info
    Write-ColorOutput "   ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–∞—Ö —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞" -Color Warning
    Write-ColorOutput "   ‚Ä¢ –î–µ–¥–ª–∞–π–Ω—ã PLC —Å–∏—Å—Ç–µ–º" -Color Warning
    Write-ColorOutput "   ‚Ä¢ –¢–∞–π–º–∞—É—Ç—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤" -Color Warning
    
    Write-ColorOutput "`n‚úÖ Interpolation –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -Color Success
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Abstraction Refinement
function Demo-AbstractionRefinement {
    Write-Header "Abstraction Refinement - –†–∞–±–æ—Ç–∞ —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏"
    
    Write-MethodInfo `
        "Abstraction Refinement" `
        "–†–∞–±–æ—Ç–∞ —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –≤–∑—Ä—ã–≤–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π" `
        "–í–∑—Ä—ã–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ –±–æ–ª—å—à–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" `
        "–†–∞–±–æ—Ç–∞–µ—Ç —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    Write-ColorOutput "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Abstraction Refinement:" -Color Info
    $models = Get-ChildItem "models/abstraction" -Filter "*.sal" | ForEach-Object { $_.BaseName }
    
    foreach ($model in $models) {
        Write-ColorOutput "   ‚úÖ $model.sal" -Color Success
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    Write-ColorOutput "`n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Abstraction Refinement:" -Color Info
    if (Test-Path "config/abstraction.conf") {
        $config = Get-Content "config/abstraction.conf" | Select-String "enabled|abstraction_method|max_abstract_states"
        foreach ($line in $config) {
            Write-ColorOutput "   $line" -Color Info
        }
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º
    Write-ColorOutput "`nüéØ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º, —Ä–µ—à–∞–µ–º—ã—Ö Abstraction Refinement:" -Color Info
    Write-ColorOutput "   ‚Ä¢ –°–µ—Ç–∏ —Å 100+ —É–∑–ª–∞–º–∏" -Color Warning
    Write-ColorOutput "   ‚Ä¢ –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è" -Color Warning
    Write-ColorOutput "   ‚Ä¢ IoT —Å–∏—Å—Ç–µ–º—ã" -Color Warning
    
    Write-ColorOutput "`n‚úÖ Abstraction Refinement –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -Color Success
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤
function Compare-Methods {
    Write-Header "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
    
    $comparison = @"
| –ú–µ—Ç–æ–¥ | –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É | –°–ª–æ–∂–Ω–æ—Å—Ç—å | –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è | –ü—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å |
|-------|----------------|-----------|------------------|--------------|
| K-–∏–Ω–¥—É–∫—Ü–∏—è | –ü—Ä–æ—Å—Ç—ã–µ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã | –ù–∏–∑–∫–∞—è | –ë—ã—Å—Ç—Ä–æ | –ü—Ä–æ—Å—Ç—ã–µ —Å–∏—Å—Ç–µ–º—ã |
| IC3/PDR | –°–ª–æ–∂–Ω—ã–µ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã | –°—Ä–µ–¥–Ω—è—è | –°—Ä–µ–¥–Ω–µ | –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã |
| Interpolation | –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ | –°—Ä–µ–¥–Ω—è—è | –°—Ä–µ–¥–Ω–µ | –°–∏—Å—Ç–µ–º—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ |
| Abstraction Refinement | –í–∑—Ä—ã–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π | –í—ã—Å–æ–∫–∞—è | –ú–µ–¥–ª–µ–Ω–Ω–æ | –ë–æ–ª—å—à–∏–µ —Å–∏—Å—Ç–µ–º—ã |
"@
    
    Write-ColorOutput $comparison -Color Info
    
    Write-ColorOutput "`nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –º–µ—Ç–æ–¥–∞:" -Color Info
    Write-ColorOutput "   ‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã (–¥–æ 100 —Å–æ—Å—Ç–æ—è–Ω–∏–π): K-–∏–Ω–¥—É–∫—Ü–∏—è" -Color Success
    Write-ColorOutput "   ‚Ä¢ –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã (100-1000 —Å–æ—Å—Ç–æ—è–Ω–∏–π): IC3/PDR" -Color Success
    Write-ColorOutput "   ‚Ä¢ –°–∏—Å—Ç–µ–º—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (1000+ —Å–æ—Å—Ç–æ—è–Ω–∏–π): Interpolation" -Color Success
    Write-ColorOutput "   ‚Ä¢ –ë–æ–ª—å—à–∏–µ —Å–µ—Ç–∏ (10000+ —Å–æ—Å—Ç–æ—è–Ω–∏–π): Abstraction Refinement" -Color Success
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏
function Analyze-Model {
    param([string]$ModelName)
    
    Write-Header "–ê–Ω–∞–ª–∏–∑ –º–æ–¥–µ–ª–∏: $ModelName"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–æ–¥–µ–ª–∏
    if ($ModelName -like "*modbus*" -or $ModelName -like "*ethercat*") {
        Write-ColorOutput "üîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥: IC3/PDR" -Color Method
        Write-ColorOutput "   –ü—Ä–∏—á–∏–Ω–∞: –°–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" -Color Info
    }
    elseif ($ModelName -like "*traffic*" -or $ModelName -like "*timer*") {
        Write-ColorOutput "üîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥: Interpolation" -Color Method
        Write-ColorOutput "   –ü—Ä–∏—á–∏–Ω–∞: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–µ–±—É—é—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π" -Color Info
    }
    elseif ($ModelName -like "*network*" -or $ModelName -like "*distributed*") {
        Write-ColorOutput "üîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥: Abstraction Refinement" -Color Method
        Write-ColorOutput "   –ü—Ä–∏—á–∏–Ω–∞: –ë–æ–ª—å—à–∏–µ —Å–µ—Ç–∏ —Ç—Ä–µ–±—É—é—Ç —Ä–∞–±–æ—Ç—ã —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏" -Color Info
    }
    else {
        Write-ColorOutput "üîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥: K-–∏–Ω–¥—É–∫—Ü–∏—è" -Color Method
        Write-ColorOutput "   –ü—Ä–∏—á–∏–Ω–∞: –ü—Ä–æ—Å—Ç—ã–µ —Å–∏—Å—Ç–µ–º—ã –Ω–µ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –º–µ—Ç–æ–¥–æ–≤" -Color Info
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
function Main {
    Write-Header "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
    
    Write-ColorOutput "üéØ –¶–µ–ª—å: –ü–æ–∫–∞–∑–∞—Ç—å —ç–≤–æ–ª—é—Ü–∏—é –º–µ—Ç–æ–¥–æ–≤ –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö –∫ —Å–ª–æ–∂–Ω—ã–º" -Color Info
    Write-ColorOutput "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/advanced_verification_methods.md" -Color Info
    Write-ColorOutput ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:" -Color Info
    $configs = @("ic3_pdr.conf", "interpolation.conf", "abstraction.conf")
    
    foreach ($config in $configs) {
        if (Test-Path "config/$config") {
            Write-ColorOutput "   ‚úÖ config/$config" -Color Success
        } else {
            Write-ColorOutput "   ‚ùå config/$config" -Color Error
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–µ–π
    Write-ColorOutput "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π:" -Color Info
    $modelDirs = @("ic3_pdr", "interpolation", "abstraction")
    
    foreach ($dir in $modelDirs) {
        if (Test-Path "models/$dir") {
            $count = (Get-ChildItem "models/$dir" -Filter "*.sal").Count
            Write-ColorOutput "   ‚úÖ models/$dir ($count –º–æ–¥–µ–ª–µ–π)" -Color Success
        } else {
            Write-ColorOutput "   ‚ùå models/$dir" -Color Error
        }
    }
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    switch ($Method) {
        "ic3_pdr" { Demo-IC3PDR }
        "interpolation" { Demo-Interpolation }
        "abstraction" { Demo-AbstractionRefinement }
        "all" {
            Demo-IC3PDR
            Demo-Interpolation
            Demo-AbstractionRefinement
            Compare-Methods
        }
    }
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
    if ($Model) {
        Analyze-Model $Model
    }
    
    Write-Header "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    Write-ColorOutput "üìà –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" -Color Info
    Write-ColorOutput "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: docs/advanced_verification_methods.md" -Color Info
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
try {
    Main
} catch {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($_.Exception.Message)" -Color Error
    exit 1
}
