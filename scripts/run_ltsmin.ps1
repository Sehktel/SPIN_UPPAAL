#!/usr/bin/env pwsh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ LTSmin (Language-agnostic Tool)
# LTSmin - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∏—Å—Ç–µ–º —Å –ø–æ–º–µ—á–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏

param(
    [Parameter(Mandatory=$false)]
    [string]$ModelFile = "models/ltsmin/traffic_light.lts",
    
    [Parameter(Mandatory=$false)]
    [switch]$Help,
    
    [Parameter(Mandatory=$false)]
    [switch]$Verbose,
    
    [Parameter(Mandatory=$false)]
    [string]$OutputFile = "",
    
    [Parameter(Mandatory=$false)]
    [ValidateSet("safety", "liveness", "fairness", "all")]
    [string]$CheckType = "all"
)

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
function Show-Help {
    Write-Host @"
LTSmin Runner Script
====================

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    .\run_ltsmin.ps1 [-ModelFile <–ø—É—Ç—å>] [-Help] [-Verbose] [-OutputFile <–ø—É—Ç—å>] [-CheckType <—Ç–∏–ø>]

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    -ModelFile     –ü—É—Ç—å –∫ LTS —Ñ–∞–π–ª—É –º–æ–¥–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: models/ltsmin/traffic_light.lts)
    -Help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
    -Verbose       –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    -OutputFile    –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    -CheckType     –¢–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏: safety, liveness, fairness, all (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: all)

–ü—Ä–∏–º–µ—Ä—ã:
    .\run_ltsmin.ps1
    .\run_ltsmin.ps1 -ModelFile "models/ltsmin/protocol_verification.lts"
    .\run_ltsmin.ps1 -Verbose -CheckType "safety" -OutputFile "results/ltsmin_output.txt"

LTSmin –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —è–∑—ã–∫–æ–≤
    - –ì–∏–±—Ä–∏–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã (—Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–π + —è–≤–Ω—ã–π)
    - –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
"@
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è LTSmin
function Test-LTSmin {
    try {
        $version = ltsmin-verify -version 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úì LTSmin –Ω–∞–π–¥–µ–Ω: $version" -ForegroundColor Green
            return $true
        }
    }
    catch {
        try {
            $version = ltsmin-verify.exe -version 2>&1
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úì LTSmin –Ω–∞–π–¥–µ–Ω (ltsmin-verify.exe): $version" -ForegroundColor Green
                return $true
            }
        }
        catch {
            try {
                $version = ltsmin -version 2>&1
                if ($LASTEXITCODE -eq 0) {
                    Write-Host "‚úì LTSmin –Ω–∞–π–¥–µ–Ω (ltsmin): $version" -ForegroundColor Green
                    return $true
                }
            }
            catch {
                Write-Host "‚úó LTSmin –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH" -ForegroundColor Red
                Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ LTSmin:" -ForegroundColor Yellow
                Write-Host "  –°–∫–∞—á–∞–π—Ç–µ —Å: https://ltsmin.utwente.nl/" -ForegroundColor Cyan
                Write-Host "  –î–æ–±–∞–≤—å—Ç–µ –≤ PATH: C:\ltsmin\bin" -ForegroundColor Cyan
                return $false
            }
        }
    }
    return $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏
function Test-ModelFile {
    param([string]$file)
    
    if (-not (Test-Path $file)) {
        Write-Host "‚úó –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $file" -ForegroundColor Red
        Write-Host "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:" -ForegroundColor Yellow
        Get-ChildItem "models/ltsmin/" -Filter "*.lts" | ForEach-Object {
            Write-Host "  - $($_.Name)" -ForegroundColor Cyan
        }
        return $false
    }
    
    Write-Host "‚úì –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω: $file" -ForegroundColor Green
    return $true
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã LTSmin
function Get-LTSminCommand {
    try {
        if (Get-Command "ltsmin-verify" -ErrorAction SilentlyContinue) {
            return "ltsmin-verify"
        } elseif (Get-Command "ltsmin" -ErrorAction SilentlyContinue) {
            return "ltsmin"
        } else {
            return "ltsmin-verify.exe"
        }
    }
    catch {
        return "ltsmin-verify"
    }
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ LTSmin –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
function Get-LTSminArguments {
    param([string]$checkType)
    
    switch ($checkType) {
        "safety" { 
            return @("-safety", "-v", "-p", "4")
        }
        "liveness" { 
            return @("-liveness", "-v", "-p", "4")
        }
        "fairness" { 
            return @("-fairness", "-v", "-p", "4")
        }
        "all" { 
            return @("-all", "-v", "-p", "4")
        }
        default { 
            return @("-all", "-v", "-p", "4")
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
function Invoke-LTSminVerification {
    param(
        [string]$modelFile,
        [string]$checkType,
        [string]$outputFile = ""
    )
    
    Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ LTSmin –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏..." -ForegroundColor Magenta
    Write-Host "–ú–æ–¥–µ–ª—å: $modelFile" -ForegroundColor Cyan
    Write-Host "–¢–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏: $checkType" -ForegroundColor Cyan
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    $command = Get-LTSminCommand
    $args = Get-LTSminArguments -checkType $checkType
    $args += $modelFile
    
    if ($Verbose) {
        Write-Host "–ö–æ–º–∞–Ω–¥–∞: $command $($args -join ' ')" -ForegroundColor Gray
    }
    
    # –ó–∞–ø—É—Å–∫ LTSmin
    try {
        if ($outputFile -and $outputFile -ne "") {
            Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $outputFile" -ForegroundColor Yellow
            & $command @args | Tee-Object -FilePath $outputFile
        } else {
            & $command @args
        }
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "`n‚úÖ LTSmin –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        } else {
            Write-Host "`n‚ö†Ô∏è LTSmin –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: $LASTEXITCODE" -ForegroundColor Yellow
        }
    }
    catch {
        Write-Host "`n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ LTSmin: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function Analyze-LTSminResults {
    param([string]$outputFile)
    
    if (-not (Test-Path $outputFile)) {
        Write-Host "–§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞" -ForegroundColor Yellow
        return
    }
    
    Write-Host "`nüìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ LTSmin..." -ForegroundColor Magenta
    
    $content = Get-Content $outputFile -Raw
    
    # –ü–æ–∏—Å–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if ($content -match "safety.*violation") {
        Write-Host "‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!" -ForegroundColor Red
    } elseif ($content -match "safety.*satisfied") {
        Write-Host "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∞" -ForegroundColor Green
    }
    
    # –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö
    if ($content -match "states.*: (\d+)") {
        $states = $matches[1]
        Write-Host "üìà –°–æ—Å—Ç–æ—è–Ω–∏–π: $states" -ForegroundColor Cyan
    }
    
    # –ü–æ–∏—Å–∫ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if ($content -match "time.*: ([\d.]+)") {
        $time = $matches[1]
        Write-Host "‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $time —Å–µ–∫" -ForegroundColor Cyan
    }
    
    # –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö
    if ($content -match "transitions.*: (\d+)") {
        $transitions = $matches[1]
        Write-Host "üîÑ –ü–µ—Ä–µ—Ö–æ–¥–æ–≤: $transitions" -ForegroundColor Cyan
    }
    
    # –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–∏–±—Ä–∏–¥–Ω–æ–º –ø–æ–¥—Ö–æ–¥–µ
    if ($content -match "hybrid.*algorithm") {
        Write-Host "üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≥–∏–±—Ä–∏–¥–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º" -ForegroundColor Cyan
    }
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
function Main {
    if ($Help) {
        Show-Help
        return
    }
    
    Write-Host "üîç LTSmin Language-agnostic Tool" -ForegroundColor Blue
    Write-Host "=================================" -ForegroundColor Blue
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ LTSmin
    if (-not (Test-LTSmin)) {
        return
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏
    if (-not (Test-ModelFile $ModelFile)) {
        return
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if ($OutputFile -and $OutputFile -ne "") {
        $outputDir = Split-Path $OutputFile -Parent
        if ($outputDir -and -not (Test-Path $outputDir)) {
            New-Item -ItemType Directory -Path $outputDir -Force | Out-Null
        }
    }
    
    # –ó–∞–ø—É—Å–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    Invoke-LTSminVerification -modelFile $ModelFile -checkType $CheckType -outputFile $OutputFile
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if ($OutputFile -and $OutputFile -ne "") {
        Analyze-LTSminResults -outputFile $OutputFile
    }
    
    Write-Host "`n‚ú® –ì–æ—Ç–æ–≤–æ!" -ForegroundColor Green
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
Main


