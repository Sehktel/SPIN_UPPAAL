# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ OMNeT++ —Å–∏–º—É–ª—è—Ü–∏–∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
# –ê–≤—Ç–æ—Ä: Senior Developer
# –î–∞—Ç–∞: 2024-12-19

param(
    [string]$ConfigFile = "config/omnetpp.conf",
    [string]$ModelFile = "models/omnetpp/IndustrialNetwork.ned",
    [int]$SimulationTime = 100,
    [string]$OutputDir = "results/omnetpp",
    [switch]$Verbose,
    [switch]$Help,
    [switch]$Gui
)

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
function Show-Help {
    Write-Host @"
OMNeT++ Industrial Network Simulator

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    .\run_omnetpp.ps1 [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    -ConfigFile <–ø—É—Ç—å>     –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: config/omnetpp.conf)
    -ModelFile <–ø—É—Ç—å>      –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ —Å–µ—Ç–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: models/omnetpp/IndustrialNetwork.ned)
    -SimulationTime <—Å–µ–∫>  –í—Ä–µ–º—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100)
    -OutputDir <–ø—É—Ç—å>      –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: results/omnetpp)
    -Verbose               –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    -Gui                   –ó–∞–ø—É—Å–∫ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
    -Help                  –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    .\run_omnetpp.ps1
    .\run_omnetpp.ps1 -SimulationTime 200 -Verbose
    .\run_omnetpp.ps1 -Gui -ConfigFile "custom_config.conf"

"@
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å–ø—Ä–∞–≤–∫–∏
if ($Help) {
    Show-Help
    exit 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è OMNeT++
function Test-OMNeTInstallation {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OMNeT++..." -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è OMNETPP_ROOT
    if ($env:OMNETPP_ROOT) {
        Write-Host "‚úÖ OMNETPP_ROOT –Ω–∞–π–¥–µ–Ω: $env:OMNETPP_ROOT" -ForegroundColor Green
        return $true
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    $omnetPaths = @(
        "C:\omnetpp-6.0",
        "C:\omnetpp-5.7",
        "C:\omnetpp-5.6",
        "$env:USERPROFILE\omnetpp-6.0",
        "$env:USERPROFILE\omnetpp-5.7"
    )
    
    foreach ($path in $omnetPaths) {
        if (Test-Path $path) {
            Write-Host "‚úÖ OMNeT++ –Ω–∞–π–¥–µ–Ω –≤: $path" -ForegroundColor Green
            $env:OMNETPP_ROOT = $path
            return $true
        }
    }
    
    Write-Host "‚ùå OMNeT++ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OMNeT++ –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é OMNETPP_ROOT" -ForegroundColor Red
    return $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-OMNeTDependencies {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π OMNeT++..." -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
    try {
        $javaVersion = java -version 2>&1
        Write-Host "‚úÖ Java –Ω–∞–π–¥–µ–Ω: $javaVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Java –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Java 8+" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Qt (–¥–ª—è GUI)
    if ($Gui) {
        try {
            $qtVersion = qmake -query QT_VERSION 2>&1
            Write-Host "‚úÖ Qt –Ω–∞–π–¥–µ–Ω: $qtVersion" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ö†Ô∏è Qt –Ω–µ –Ω–∞–π–¥–µ–Ω. GUI –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å" -ForegroundColor Yellow
        }
    }
    
    return $true
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è OMNeT++
function Set-OMNeTEnvironment {
    Write-Host "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è OMNeT++..." -ForegroundColor Yellow
    
    if ($env:OMNETPP_ROOT) {
        $omnetRoot = $env:OMNETPP_ROOT
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –≤ PATH
        $paths = @(
            "$omnetRoot\bin",
            "$omnetRoot\tools\win64\mingw64\bin",
            "$omnetRoot\tools\win64\mingw64\opt\bin"
        )
        
        foreach ($path in $paths) {
            if (Test-Path $path) {
                $env:PATH = "$path;$env:PATH"
                Write-Host "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ PATH: $path" -ForegroundColor Green
            }
        }
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö OMNeT++
        $env:OMNETPP_ROOT = $omnetRoot
        $env:OMNETPP_IMAGE_PATH = "$omnetRoot\images"
        
        Write-Host "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è OMNeT++ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" -ForegroundColor Green
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
function Test-ConfigFile {
    param([string]$ConfigPath)
    
    if (-not (Test-Path $ConfigPath)) {
        Write-Host "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $ConfigPath" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: $ConfigPath" -ForegroundColor Green
    return $true
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏
function Test-ModelFile {
    param([string]$ModelPath)
    
    if (-not (Test-Path $ModelPath)) {
        Write-Host "‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $ModelPath" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω: $ModelPath" -ForegroundColor Green
    return $true
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function New-OutputDirectory {
    param([string]$OutputPath)
    
    if (-not (Test-Path $OutputPath)) {
        New-Item -ItemType Directory -Path $OutputPath -Force | Out-Null
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $OutputPath" -ForegroundColor Green
    }
    else {
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $OutputPath" -ForegroundColor Green
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ ini —Ñ–∞–π–ª–∞ –¥–ª—è OMNeT++
function New-OMNeTIniFile {
    param(
        [string]$OutputPath,
        [int]$SimTime
    )
    
    $iniContent = @"
[General]
network = IndustrialNetwork
sim-time-limit = ${SimTime}s
cpu-time-limit = 300s
warnings = true
debug-on-errors = true

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–º—É–ª—è—Ü–∏–∏
seed-set = 1
repeat = 1
sim-time-resolution = us

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
num_sensors = 3
num_actuators = 2
plc_cycle_time = 1ms
sensor_update_rate = 100ms
actuator_response_time = 10ms

# –°–µ—Ç–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
ethernet_bandwidth = 100Mbps
modbus_timeout = 1000ms
ethercat_cycle_time = 1ms
opc_ua_publish_interval = 100ms

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
modbus_enabled = true
ethercat_enabled = true
opc_ua_enabled = true

# –í—ã—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã
scalar_file = "$OutputPath\omnetpp.sca"
vector_file = "$OutputPath\omnetpp.vec"
snapshot_file = "$OutputPath\omnetpp.sna"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_level = INFO
log_format = "%L [%T] %M"
log_file = "$OutputPath\omnetpp.log"

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
gui = $($Gui.ToString().ToLower())
qtenv = $($Gui.ToString().ToLower())
cmdenv = $((!$Gui).ToString().ToLower())

# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
record_eventlog = true
eventlog-recording-intervals = "0s..${SimTime}s"
"@
    
    $iniPath = Join-Path $OutputPath "omnetpp.ini"
    $iniContent | Out-File -FilePath $iniPath -Encoding UTF8
    
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω ini —Ñ–∞–π–ª: $iniPath" -ForegroundColor Green
    return $iniPath
}

# –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ OMNeT++
function Start-OMNeTSimulation {
    param(
        [string]$ModelPath,
        [string]$OutputPath,
        [string]$IniPath,
        [int]$SimTime
    )
    
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ OMNeT++..." -ForegroundColor Green
    Write-Host "–ú–æ–¥–µ–ª—å: $ModelPath" -ForegroundColor Cyan
    Write-Host "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $IniPath" -ForegroundColor Cyan
    Write-Host "–í—Ä–µ–º—è —Å–∏–º—É–ª—è—Ü–∏–∏: $SimTime —Å–µ–∫—É–Ω–¥" -ForegroundColor Cyan
    Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $OutputPath" -ForegroundColor Cyan
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    Push-Location $OutputPath
    
    try {
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
        if ($Gui) {
            $command = "omnetpp"
            $args = @("-u", "Qtenv", "-c", "General", "-r", "0", $IniPath)
        }
        else {
            $command = "omnetpp"
            $args = @("-u", "Cmdenv", "-c", "General", "-r", "0", $IniPath)
        }
        
        Write-Host "‚è≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–º—É–ª—è—Ü–∏–∏..." -ForegroundColor Yellow
        Write-Host "–ö–æ–º–∞–Ω–¥–∞: $command $($args -join ' ')" -ForegroundColor Cyan
        
        if ($Verbose) {
            & $command @args
        }
        else {
            & $command @args 2>&1 | Out-Null
        }
        
        Write-Host "‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        $results = Get-ChildItem -Path "." -Filter "*.sca" | Sort-Object LastWriteTime -Descending
        if ($results) {
            Write-Host "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–∏:" -ForegroundColor Green
            foreach ($result in $results) {
                Write-Host "  - $($result.Name) ($($result.Length) –±–∞–π—Ç)" -ForegroundColor Cyan
            }
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∏–º—É–ª—è—Ü–∏–∏: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
    finally {
        Pop-Location
    }
    
    return $true
}

# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ OMNeT++
function Analyze-OMNeTResults {
    param([string]$OutputPath)
    
    Write-Host "üìà –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∏–º—É–ª—è—Ü–∏–∏ OMNeT++..." -ForegroundColor Yellow
    
    $scaFiles = Get-ChildItem -Path $OutputPath -Filter "*.sca"
    $vecFiles = Get-ChildItem -Path $OutputPath -Filter "*.vec"
    
    if ($scaFiles) {
        Write-Host "üìä –°–∫–∞–ª—è—Ä–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:" -ForegroundColor Green
        foreach ($scaFile in $scaFiles) {
            Write-Host "  - $($scaFile.Name) ($($scaFile.Length) –±–∞–π—Ç)" -ForegroundColor Cyan
            
            # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ SCA —Ñ–∞–π–ª–∞
            try {
                $content = Get-Content $scaFile.FullName -Head 20
                $statistics = $content | Where-Object { $_ -match "^\s*\w+" }
                if ($statistics) {
                    Write-Host "    –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $($statistics.Count) –∑–∞–ø–∏—Å–µ–π" -ForegroundColor White
                }
            }
            catch {
                Write-Host "    ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å SCA —Ñ–∞–π–ª" -ForegroundColor Yellow
            }
        }
    }
    
    if ($vecFiles) {
        Write-Host "üìà –í–µ–∫—Ç–æ—Ä–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:" -ForegroundColor Green
        foreach ($vecFile in $vecFiles) {
            Write-Host "  - $($vecFile.Name) ($($vecFile.Length) –±–∞–π—Ç)" -ForegroundColor Cyan
        }
    }
    
    if (-not $scaFiles -and -not $vecFiles) {
        Write-Host "‚ö†Ô∏è –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Yellow
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host "üè≠ OMNeT++ Industrial Network Simulator" -ForegroundColor Magenta
    Write-Host "=======================================" -ForegroundColor Magenta
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OMNeT++
    if (-not (Test-OMNeTInstallation)) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ OMNeT++. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if (-not (Test-OMNeTDependencies)) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    Set-OMNeTEnvironment
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if (-not (Test-ConfigFile $ConfigFile)) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    if (-not (Test-ModelFile $ModelFile)) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã." -ForegroundColor Red
        exit 1
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    New-OutputDirectory $OutputDir
    
    # –°–æ–∑–¥–∞–Ω–∏–µ ini —Ñ–∞–π–ª–∞
    $iniFile = New-OMNeTIniFile -OutputPath $OutputDir -SimTime $SimulationTime
    
    # –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
    if (Start-OMNeTSimulation -ModelPath $ModelFile -OutputPath $OutputDir -IniPath $iniFile -SimTime $SimulationTime) {
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        Analyze-OMNeTResults $OutputDir
        
        Write-Host "üéâ –°–∏–º—É–ª—è—Ü–∏—è OMNeT++ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $OutputDir" -ForegroundColor Cyan
    }
    else {
        Write-Host "‚ùå –°–∏–º—É–ª—è—Ü–∏—è OMNeT++ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π." -ForegroundColor Red
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if ($MyInvocation.InvocationName -ne ".") {
    Main
}
